"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import configuration as components_configuration
from typing import List, Optional


@dataclasses.dataclass
class GetConfigurationsRequest:
    project: str = dataclasses.field(metadata={'query_param': { 'field_name': 'project', 'style': 'form', 'explode': True }})
    r"""Project identifier"""
    type: str = dataclasses.field(metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Configuration type"""
    



@dataclasses.dataclass
class GetConfigurationsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    configurations: Optional[List[components_configuration.Configuration]] = dataclasses.field(default=None)
    r"""An array of configurations"""
    

